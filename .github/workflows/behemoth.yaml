name : Main Workflow
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  initJob:
    uses : ./.github/workflows/goscrap.yaml
    with:
      targetRepo: anuragkanwar/docus
      sitemapPath: http://localhost:3000/sitemap.xml
      configPath: ./js.json
    secrets:
      apiKey: ${{ secrets.API_KEY }}

  p1:
    needs: initJob
    uses : ./.github/workflows/goscrap.yaml
    with:
      targetRepo: anuragkanwar/docus
      sitemapPath: http://localhost:3000/sitemap.xml
      configPath: ./js.json
    secrets:
      apiKey: ${{ secrets.API_KEY }}
  p2:
    needs : initJob
    uses : ./.github/workflows/goscrap.yaml
    with:
      targetRepo: anuragkanwar/docus
      sitemapPath: http://localhost:3000/sitemap.xml
      configPath: ./js.json
    secrets:
      apiKey: ${{ secrets.API_KEY }}
  p3:
    needs : initJob
    uses : ./.github/workflows/goscrap.yaml
    with:
      targetRepo: anuragkanwar/docus
      sitemapPath: http://localhost:3000/sitemap.xml
      configPath: ./js.json
    secrets:
      apiKey: ${{ secrets.API_KEY }}
  p4:
    needs: initJob
    uses : ./.github/workflows/goscrap.yaml
    with:
      fail : true
      targetRepo: anuragkanwar/docus
      sitemapPath: http://localhost:3000/sitemap.xml
      configPath: ./js.json

    secrets:
      apiKey: ${{ secrets.API_KEY }}
  p5:
    needs : initJob
    uses : ./.github/workflows/goscrap.yaml
    with:
      targetRepo: anuragkanwar/docus
      sitemapPath: http://localhost:3000/sitemap.xml
      configPath: ./js.json
    secrets:
      apiKey: ${{ secrets.API_KEY }}
  p6:
    needs : initJob
    uses : ./.github/workflows/goscrap.yaml
    with:
      targetRepo: anuragkanwar/docus
      sitemapPath: http://localhost:3000/sitemap.xml
      configPath: ./js.json
      fail : true
    secrets:
      apiKey: ${{ secrets.API_KEY }}


  final_job:
    needs : [p1, p2, p3, p4, p5, p6]
    uses : ./.github/workflows/goscrap.yaml
    with:
      fail : true
      targetRepo: anuragkanwar/docus
      sitemapPath: http://localhost:3000/sitemap.xml
      configPath: ./js.json
    secrets:
      apiKey: ${{ secrets.API_KEY }}

  notify_job:
    needs: [initJob, p1, p2, p3, p4, p5, p6, final_job]
    runs-on: ubuntu-latest
    if: ${{ always() && contains(needs.*.result, 'failure') }}
    steps:
      - name : dump needs
        run : |
          echo '${{ toJson(github) }}'
      - name : custom script
        run: |
          echo "Checking for failed jobs..."
          failed_jobs=$(echo '${{ toJson(needs) }}' | jq -r 'to_entries | map(select(.value.result == "failure") | .key) | .[]')

          echo $failed_jobs

          if [ -z "$failed_jobs" ]; then
            echo "No jobs failed."
          else
            msg='{ "blocks": [ { "type": "header", "text": { "type": "plain_text", "text": ":bangbang: Crawler Workflow Failed :bangbang:", "emoji": true } }, { "type": "section", "text": { "type": "plain_text", "text": "One or more jobs have failed :skull::skull: \n\nJob names: '
            jobs=""
            for job in $failed_jobs; do
              jobs+=$job
              jobs+=", "
            done
            msg+=$jobs
            msg+=' \n\n", "emoji": true } }, { "type": "context", "elements": [ { "type": "image", "image_url": "https://slack-imgs.com/?c=1&o1=wi32.he32.si&url=https%3A%2F%2Fslack.github.com%2Fstatic%2Fimg%2Ffavicon-neutral.png", "alt_text": "cute cat" }, { "type": "plain_text", "text": "Author: K A Applegate", "emoji": true } ] } ] }'
            echo $msg
            curl -X POST -H 'Content-type: application/json' --data "$msg" https://hooks.slack.com/services/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
          fi
